1) Ringkasan singkat
Bot adalah MT5 automated trading bot dengan GUI Tkinter, banyak fitur safety & diagnostics, session-aware behaviour (Asia/London/New York + overlap), beberapa mode strategi (HFT, Scalping, Intraday, Arbitrage), auto-lot sizing, TP/SL multi-unit (pips / price / % / currency), dan notifikasi/logging. Kode berisi fungsi koneksi MT5 yang sangat detail, validasi symbol otomatis, kalkulasi pip/value, parser TP/SL, order engine, monitoring sesi, dan GUI untuk kontrol manual/monitoring. 
 

2) Koneksi & diagnosa MT5
Fitur & perilaku:

Multi-attempt initialization + berbagai metode inisialisasi (path, default, login autoshortcuts) dengan retry dan troubleshooting hints. (fungsi connect_mt5). 

Diagnostic prints: versi Python, platform, versi MT5, account & terminal info, sample symbols. 

check_mt5_status() untuk validasi koneksi sebelum operasi trading. 

Deteksi dan reporting masalah umum (login, permission, terminal disconnected, firewall, Market Watch kosong). 

3) Manajemen symbol / market data
Fitur:

get_symbols() mengambil symbols visible; get_symbol_suggestions() memberi fallback/popular pairs. 

validate_and_activate_symbol(symbol) — varian simbol otomatis (XAU/GOLD special handling), mencoba banyak variasi (.m, .raw, /, -, suffixes), mengaktifkan di Market Watch bila perlu, uji tick data berkali-kali, pengecekan trade_mode, spread thresholds. (sangat robust untuk broker berbeda). 

detect_gold_symbol() otomatis mendeteksi symbol XAU yang cocok untuk broker. 

Final spread checks dengan threshold berbeda per tipe symbol (forex, JPY, gold, crypto, indices, oil). 

4) Kalkulasi nilai (pips / nilai / konversi)
Fungsi penting:

calculate_pip_value(symbol, lot_size) — menghitung pip value berdasarkan tipe symbol, trade_tick_value, trade_tick_size, fallback bila data tidak ada. 

get_currency_conversion_rate(from,to) — 3 metode: direct pair, reverse pair (1/rate), cross-rate via USD; dipakai untuk konversi currency di TP/SL. 

5) TP / SL parsing & validasi (multi-unit)
Fitur & detail:

parse_tp_sl_input(input_value, unit, symbol, lot_size, current_price, order_type, is_tp)

Menerima unit = "pips", "price", "%", atau nama currency (USD, EUR, dsb.) atau "currency" (pakai account currency).

Hitung pips, price level, ekspektasi profit/loss dalam account currency, % dari balance. 

validate_tp_sl_levels(symbol, tp_price, sl_price, order_type, current_price) — mengecek min stop level, spread, safety margin, memastikan TP/SL berada di sisi benar harga (BUY TP > price, SELL TP < price, dll). 

6) Auto-lot / Risk sizing
Fitur & detail:

calculate_auto_lot_size(symbol, sl_pips, risk_percent=1.0) — gunakan balance, pip_value per lot, sl pips untuk menghitung lot optimal. Memperhitungkan volume_min, volume_max, volume_step dari symbol info. 

GUI toggle untuk auto_lot (dibaca dalam open_order) dan entri risk_percent untuk parameterize risk. (GUI membaca/menentukan). 

7) Order execution engine (core trading)
Alur & fitur utama:

open_order(symbol, lot, action, sl_input, tp_input, sl_unit='pips', tp_unit='pips') — inti pengiriman order:

Rate limiting (block trade berulang dalam window 3s).

Cek posisi terbuka vs max_positions.

Validasi symbol & aktivasi (validate_and_activate_symbol). 

Baca tick kpd 3 attempt untuk harga (bid/ask).

Tentukan order type (BUY/Sell) → price = ask/bid.

Session-based adjustments: ambil get_current_trading_session() dan adjust_strategy_for_session() untuk lot_multiplier, tp_multiplier, sl_multiplier. (session-aware scaling).

Parse TP/SL via parse_tp_sl_input, rounding sesuai digits & point; validate TP/SL dengan validate_tp_sl_levels.

Buat request dict (MT5 TRADE_ACTION_DEAL) dengan deviation, magic, comment ("AutoBotCuan"), type_time, type_filling. Kirim mt5.order_send(request) dan memproses hasil retcode serta retry/diagnostic. 

Contoh: order tanpa TP/SL juga didukung jika TP/SL gagal dihitung atau kosong. 

8) Strategi trading (implementasi & behaviour)
Bot mengandung multi-strategy engine dan logic pemilihan strategi:

Strategi yang ada (mode):

HFT — interval loop sangat cepat (BOT_LOOP_INTERVALS), TP/SL kecil, tingkat eksekusi tinggi. (fungsi/loop strategi: ada mode HFT di BOT_LOOP_INTERVALS dan di execute_trade_signal/open_order).

Scalping — target pips kecil, risk cepat, default current_strategy = "Scalping". TP/SL default diambil bila user kosong. execute_trade_signal mengatur default TP/SL per strategi. 

Intraday — trade lebih besar, TP/SL lebih long, intensitas rendah. 

Arbitrage — terdapat mode arbitrage (penyebutan Arbitrage di BOT_LOOP_INTERVALS dan sesi preferensi). Implementasi menangani spread/latency & pair combos. 

Bagaimana sinyal dibentuk:

Ada pipeline calculate_indicators() / get_symbol_data() (indikator: EMA, RSI, ATR, MACD, Bollinger, Stochastic — fungsi kalkulasi indikator tersedia) dan ada scoring rules / threshold. (fungsi indikator & analisa ada di beberapa blok kalkulasi indikator).

Ada juga ai_market_analysis() (analisa tambahan / optional) yang memberikan opini sinyal (fungsi AI/heuristic helper — digunakan untuk quality-scoring). 

execute_trade_signal(symbol, action) memanggil validate_trading_conditions → open_order. Ini adalah jalur dari sinyal → eksekusi.

Catatan: strategi di-parameter-kan dengan default TP/SL/lot per mode tetapi bisa disesuaikan via GUI per symbol/strategy.

9) Session & schedule management (pasar & volatilitas-aware)
Konfigurasi & adaptasi:

TRADING_SESSIONS mendefinisikan Asia / London / New_York / Overlap dengan start/end, volatility, preferred pairs. SESSION_SETTINGS memiliki max_spread_multiplier, volatility_filter, trading_intensity. Bot menyesuaikan lot/TP/SL menggunakan adjust_strategy_for_session & get_current_trading_session().

10) Risk management & safeties
Fitur penting:

Global config: max_loss_streak, max_drawdown, profit_target, daily_max_loss, max_positions. 

Pengecekan kondisi trading sebelum order (validate_trading_conditions) termasuk visibility symbol, trade_mode, tick availability, spread warnings. 

Rate limiting per symbol (menahan trade cepat berulang), position limit enforcement sebelum submit order (position_count >= max_positions). 

Auto close / emergency logic (ada fungsi close_all_orders() / close_position() / modify_order() — gunakan untuk forced-exit). 

Monitoring loss streak dan drawdown (variabel global loss_streak, max_drawdown) untuk menghentikan bot bila melebihi threshold. 

11) Monitoring, logging & reporting
Fitur & output:

logger(msg) central dengan timestamp dan integrasi ke GUI log panel; juga membuat direktori logs bila belum ada. 

session_data structure menyimpan start_balance, total_trades, winning_trades, losing_trades, daily_orders, daily_profit, max_equity, dsb. (dipakai untuk performance report). 

Generate/performance report functions (generate_performance_report, send_hourly_report, export_logs) dan kemampuan export log ke file CSV/txt dari GUI.

Integrasi Telegram (token/CHAT_ID di config) — ada fungsi untuk mengirim pesan/alert ke Telegram bila event penting (koneksi, order executed, emergency stop). (Anda bisa cek variabel TELEGRAM_TOKEN/TELEGRAM_CHAT_ID di config). 

12) GUI (Tkinter) — kontrol & utilities
Komponen GUI & fungsi:

TradingBotGUI (class GUI) menyediakan: koneksi MT5, tombol Start/Stop, emergency stop, symbol input & validate button, kalkulator TP/SL interaktif, export logs, live log window, posisi list/tree, risk percent entry, auto_lot toggle, strategy selector, dan opsi untuk send report now.

Kalkulator TP/SL (GUI): ambil current_price, pip_value, tampilkan expected profit / loss / R:R. Implementasi di calculate_tp_sl() yang memanggil parse_tp_sl_input & calculate_pip_value. 

13) Auto-recovery, watchdog & maintenance
Fitur otomatis:

Cleanup resources cleanup_resources() (memaksa gc.collect(), clear large dataframes) untuk mencegah memory leak. 

Ada loop/monitor thread yang melakukan health-check, reconnect MT5 bila terputus, retry logic untuk order & symbol activation, dan periodic housekeeping (logs, session reset). 

14) Utilities tambahan & developer helpers
get_account_info(), get_positions(), get_symbols() — wrapper dengan error handling.

get_symbol_suggestions() — suggestion list untuk GUI. 

CSV logging, export logs, dan GUI export. 

15) Bagaimana kinerja / metrik yang dipantau (sistem kinerja)
Metrik yang direkam/dipakai:

session_data → start_balance, total_trades, winning_trades, losing_trades, total_profit, daily_profit, max_equity. (dipakai untuk laporan & pengambilan keputusan stop). 

Monitoring loss_streak, max_drawdown, daily_max_loss, profit_target (pemicu auto stop/halt). 

Log order retcodes, order comments, dan error codes dari MT5 untuk audit & troubleshooting. 

16) Error handling & fallback
Banyak try/except dengan logging detil + fallback behavior (mis. fallback pip_value, fallback symbol suggestions, retry activate symbol).

Jika koneksi MT5 hilang → mode read-only / reconnect attempts dengan hints troubleshooting. 

17) Poin penting yang mungkin perlu Anda periksa / perbarui
Credentials & Token — TELEGRAM_TOKEN dan TELEGRAM_CHAT_ID ada di kode; pastikan aman (environment variable lebih baik). 

Permissions MT5 — pastikan terminal MT5 dijalankan "Run as admin" dan login broker. Kode sudah memberi hints troubleshooting. 

Backtesting — file ini adalah live-trading oriented; saya tidak melihat kerangka backtest lengkap (historical-sim engine) — jika Anda mau saya bisa bantu implementasi backtest.

Unit tests / monitoring — sarankan menambahkan unit tests untuk helper kritikal (parse TP/SL, pip calc, validate_symbol).
(Referensi error messages & hints ada di fungsi connect/validate). 

18) Daftar fungsi & modul kunci (ringkasan cepat — untuk pencarian cepat)
Koneksi / status: connect_mt5(), check_mt5_status() 

Symbol: get_symbols(), validate_and_activate_symbol(), detect_gold_symbol(), get_symbol_suggestions()

Pricing / value: calculate_pip_value(), get_currency_conversion_rate()

TP/SL: parse_tp_sl_input(), validate_tp_sl_levels()

Lot/risk: calculate_auto_lot_size() 

Trade execution: open_order(), execute_trade_signal()

Utilities: cleanup_resources(), ensure_log_directory(), logger()

GUI class & helpers: TradingBotGUI (calc TP/SL, export logs, symbol validate UI). 